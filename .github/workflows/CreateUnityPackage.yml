name: Create PulsBridge Unity Package

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup debug info
        run: |
          echo "### SYSTEM INFO ###"
          uname -a
          df -h
          whoami
          echo "### WORKSPACE ###"
          pwd
          ls -la
          echo "### FILES CHECK ###"
          ls -la Assets/Plugins/PulsBridge.jslib
          ls -la Assets/Puls/PulsBridge.cs
          ls -la Assets/WebGLTemplates/PulsTemplate/index.html

      - name: Create build directory
        run: |
          mkdir -p build
          chmod 777 build
          echo "### BUILD DIR PERMISSIONS ###"
          ls -ld build
          touch build/testfile.txt
          echo "Test content" > build/testfile.txt
          ls -la build/

      - name: Create unitypackage (Alternative method)
        run: |
          echo "### CREATING PACKAGE MANUALLY ###"
          mkdir -p temp_pkg/Assets
          
          # Копируем необходимые файлы с сохранением структуры
          mkdir -p temp_pkg/Assets/Plugins
          cp Assets/Plugins/PulsBridge.jslib temp_pkg/Assets/Plugins/
          
          mkdir -p temp_pkg/Assets/Puls
          cp Assets/Puls/PulsBridge.cs temp_pkg/Assets/Puls/
          
          mkdir -p temp_pkg/Assets/WebGLTemplates/PulsTemplate
          cp Assets/WebGLTemplates/PulsTemplate/index.html temp_pkg/Assets/WebGLTemplates/PulsTemplate/
          
          # Создаем .unitypackage через zip
          cd temp_pkg
          zip -r ../build/PulsBridgeSDK.manual.unitypackage .
          cd ..
          rm -rf temp_pkg
          
          echo "### RESULTING PACKAGE ###"
          ls -la build/
          file build/PulsBridgeSDK.manual.unitypackage

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PulsBridgeSDK
          path: build/PulsBridgeSDK.manual.unitypackage
